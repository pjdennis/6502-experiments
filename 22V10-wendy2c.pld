GAL22V10   ; Logic for 65C02 based computer "Wendy" with dual speed clock and memory banking
Wendy2c    ; Max 8 characters


;1     2    3    4    5    6    7       8       9       10  11   12
 OSC   A15  A14  A13  A12  A11  C4      C3      C2      C1  C0   GND
 RWRB  /WR  R15  R16  R17  R18  /ROMCS  /RAMCS  /VIACS  CK  CKS  VCC
;13    14   15   16   17   18   19      20      21      22  23   24


; Clock
CKS.R = /CKS

CK.R = CK * /CKS  +  /CK * CKS  +  /ROMCS * /CK


; Write Enable
WR = /RWRB * CK


; Chip Select
ROMCS  = /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 *  A13 *  A12 * A11
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 * /A14
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 * /A13
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 *  A13 * /A12
       +  C4       * /C2 * /C1 * /C0 * A15 * /A14                     ; ROM with RAM at $f800
       +  C4       * /C2 * /C1 * /C0 * A15 *  A14 * /A13              ; .
       +  C4       * /C2 * /C1 * /C0 * A15 *  A14 * A13 * /A12        ; .

VIACS  = A15 * A14 * A13 * A12 * /A11

/RAMCS = /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 *  A13 *  A12 * A11 ; ROM Selected
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 * /A14                     ; .
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 * /A13              ; .
       + /C4 * /C3 * /C2 * /C1 * /C0 * A15 *  A14 *  A13 * /A12       ; .
       +  C4       * /C2 * /C1 * /C0 * A15 * /A14                     ; ROM with RAM at $f800
       +  C4       * /C2 * /C1 * /C0 * A15 *  A14 * /A13              ; .
       +  C4       * /C2 * /C1 * /C0 * A15 *  A14 * A13 * /A12        ; .
       + A15 * A14 * A13 * A12 * /A11                                 ; VIA Selected


; Address decoding
R15 = /A15 * /A14 * /C4 * /C3 * /C2 * /C1 * /C0 ; $0000..$3fff config $00000         => Bank $00001         ROM at $8000
    + /A15 * /A14 * /C4 *  C0                   ; $0000..$3fff config $00001..$01111 => Bank $00001..$01111 RAM at $8000
    + /A15 * /A14 *  C4 * /C3                   ; $0000..$3fff config $10000..$10111 => Bank $00001         RAM at $8000
    +  A15 *  A14                               ; $8000..$ffff config $10000..$11111 => Bank $1X000..$1X111 RAM at $8000


R16 = /A15 * /A14 * /C4 * C1                    ; $0000..$3fff config $00001..$01111 => Bank $00001..$01111 RAM at $8000
    + /A15 * /A14 *  C4 * C3                    ; $0000..$3fff config $10000..$10111 => Bank $00010         RAM at $8000
    +  A15 * /A14 *  C4 * C0                    ; $8000..$ffff config $10000..$11111 => Bank $1X000..$1X111 RAM at $8000
    +  A15 * /A13 *  C4 * C0
    +  A15 * /A12 *  C4 * C0
    +  A15 * /A11 *  C4 * C0

R17 = /A15 * /A14 * /C4 * C2                    ; $0000..$3fff config $00001..$01111 => Bank $00001..$01111 RAM at $8000
    +  A15 * /A14 *  C4 * C1                    ; $8000..$ffff config $10000..$11111 => Bank $1X000..$1X111 RAM at $8000
    +  A15 * /A13 *  C4 * C1
    +  A15 * /A12 *  C4 * C1
    +  A15 * /A11 *  C4 * C1

R18 = /A15 * /A14 * /C4 * C3                    ; $0000..$3fff config $00001..$01111 => Bank $00001..$01111 RAM at $8000
    +  A15 * /A14 *  C4 * C2                    ; $8000..$ffff config $10000..$11111 => Bank $1X000..$1X111 RAM at $8000
    +  A15 * /A13 *  C4 * C2
    +  A15 * /A12 *  C4 * C2
    +  A15 * /A11 *  C4 * C2

DESCRIPTION

Glue logic for Ben Eater-inspired "Wendy2c" breadboard computer

Inputs:
OSC       Crystal oscillator
A11..A15  Address lines from 65C02
RWRB      Read signal from 65C02
C0..C4    Memory configuration selection from the VIA

Outputs:
CKS       System clodk with  speed fixed at half the speed of OSC
CK        Variable speed clock. Half the speed of CKS when ROM is
          selected, otherwise the same speed as CKS
/WR       Active low write signal suitable for RAM and ROM chips
/ROMCS    ROM chip select
/RAMCS    RAM chip select
/VIACS    VIA chip select
R15..R18  RAM address lines. Vary based on bank address C0..C4 and A12..A15

